name: Canary
on:
    workflow_dispatch:
jobs:
    CanaryDeploy:
        timeout-minutes: 15
        env:
            AWS_REGION: eu-west-1
            RAVEN_ENVIRONMENT: PROD
            NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        permissions:
            contents: read # This is required for actions/checkout
            id-token: write # This is required for requesting the JWT
            pull-requests: write # This is required for actions-comment-pull-request
        runs-on: ubuntu-latest
        steps:
            - name: React on comment
              uses: peter-evans/create-or-update-comment@v4
              with:
                comment-id: ${{ github.event.comment.id }}
                reactions: '+1'
            - name: Github API Request
              id: request
              uses: octokit/request-action@v2.0.2
              with:
                  route: ${{ github.event.issue.pull_request.url }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Checkout the repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  repository: ${{fromJson(steps.request.outputs.data).head.repo.full_name}}
                  ref: ${{fromJson(steps.request.outputs.data).head.ref}}
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  role-to-assume: arn:aws:iam::537716077656:role/github-actions
                  role-session-name: deploy-ds-storybook-prod
                  aws-region: ${{ env.AWS_REGION }}
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: yarn
            - name: Install dependencies
              run: yarn install --immutable
            - name: Build
              run: yarn build
            - name: Publish to NPM
              run: |
                  npm whoami
                  yarn publish:canary --summary-file ${{ runner.temp }}
            - name: Parse versions
              run: |
                VERSIONS=$(cat ${{ runner.temp }}/lerna-publish-summary.json | jq -r "map({ (.packageName): .version }) | add")
                echo "VERSIONS<<EOF" >> $GITHUB_ENV
                echo "$VERSIONS" >> $GITHUB_ENV
                echo "EOF" >> $GITHUB_ENV
            - name: On Success
              if: success()
              uses: thollander/actions-comment-pull-request@v2
              with:
                comment_tag: success_canary_comment
                mode: recreate
                message: |
                  Canary version is published :rocket:

                  https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

                  ```json
                  ${{ env.VERSIONS }}
                  ```
            - name: On Failure
              if: failure()
              uses: thollander/actions-comment-pull-request@v2
              with:
                comment_tag: failure_canary_comment
                mode: recreate
                message: |
                  Failed to publish canary package :sob:

                  https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}


